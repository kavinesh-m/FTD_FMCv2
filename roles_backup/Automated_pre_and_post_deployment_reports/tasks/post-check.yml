---
# Display extraction summary
- name: Display extraction summary
  ansible.builtin.debug:
    msg:
      - "========================================="
      - "EXTRACTION SUMMARY"
      - "========================================="
      - "Execution ID: {{ execution_id }}"
      - "Status: {{ execution_status | upper }}"
      - "Total Devices: {{ total_devices | default(0) }}"
      - "Devices with Changes: {{ devices_with_changes | default(0) }}"
      - "Deployment Changes Found: {{ deployment_changes_count | default(0) }}"
      - "========================================="

# Send email report
- name: Send email report
  when:
    - send_to_email | default('no') | lower == 'yes'
    - smtp_username is defined
    - smtp_password is defined
  delegate_to: localhost
  block:
    - name: Create temporary files for email attachments
      ansible.builtin.copy:
        content: "{{ item.content }}"
        dest: "/tmp/{{ item.name }}_{{ execution_id }}.{{ item.ext }}"
      loop:
        - { name: "deployment_changes", content: "{{ report_data.changes_csv }}", ext: "csv" }
        - { name: "deployment_summary", content: "{{ report_data.summary_csv }}", ext: "csv" }
        - { name: "deployment_details", content: "{{ report_data.summary_json }}", ext: "json" }
      register: temp_files

    - name: Send deployment report via email
      ansible.builtin.mail:
        host: "smtp.gmail.com"
        port: 587
        username: "{{ smtp_username }}"
        password: "{{ smtp_password }}"
        from: "{{ smtp_username }}"
        to: "{{ email_to_address }}"
        subject: "{{ email_subject }} - {{ execution_id }}"
        body: |
          FMC Deployment Report
          ========================================
          
          Report ID: {{ execution_id }}
          Generated: {{ report_date }} at {{ report_time }}
          
          DEPLOYMENT CHANGES DETECTED: {{ deployment_changes_count | default(0) }}
          
          {% set changes = deployment_differences | from_json %}
          {% if changes | length > 0 %}
          - Added: {{ changes | selectattr('action', 'equalto', 'ADDED') | list | length }}
          - Edited: {{ changes | selectattr('action', 'equalto', 'EDITED') | list | length }}
          - Removed: {{ changes | selectattr('action', 'equalto', 'REMOVED') | list | length }}
          {% else %}
          No deployment changes detected.
          {% endif %}
          
          SUMMARY
          -------
          Pre-Deployment: {{ pre_deployment_data.devices_with_changes }} devices with pending changes
          Post-Deployment: {{ post_deployment_data.devices_with_changes }} devices with pending changes
          
          Attached Files:
          - deployment_changes_*.csv - List of all changes (Added/Edited/Removed)
          - deployment_summary_*.csv - Complete deployment summary
          - deployment_details_*.json - Detailed JSON data
          
          View deployment history directly in FMC:
          https://{{ ansible_host }}/ui/deployment/deployhistory
          
          ---
          Generated by Ansible Automation Platform
        attach:
          - "/tmp/deployment_changes_{{ execution_id }}.csv"
          - "/tmp/deployment_summary_{{ execution_id }}.csv"
          - "/tmp/deployment_details_{{ execution_id }}.json"
        secure: "starttls"
        charset: "utf-8"
      register: email_result
      failed_when: false

    - name: Clean up temporary files after email
      ansible.builtin.file:
        path: "/tmp/{{ item.name }}_{{ execution_id }}.{{ item.ext }}"
        state: absent
      loop:
        - { name: "deployment_changes", ext: "csv" }
        - { name: "deployment_summary", ext: "csv" }
        - { name: "deployment_details", ext: "json" }
      when: email_result is defined

    - name: Set email status
      ansible.builtin.set_fact:
        email_sent: "{{ not email_result.failed | default(false) }}"

# Upload to GitHub
- name: Upload reports to GitHub
  when:
    - store_to_repo | default('no') | lower == 'yes'
    - github_repo_owner is defined
    - github_repo_name is defined
    - github_token is defined
  delegate_to: localhost
  block:
    - name: Check GitHub repository
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [200, 404]
        validate_certs: yes
      register: repo_check
      failed_when: false

    - name: Set GitHub branch
      ansible.builtin.set_fact:
        github_branch_name: "{{ repo_check.json.default_branch | default('master') }}"
      when: repo_check.status == 200

    - name: Encode reports for GitHub upload
      ansible.builtin.set_fact:
        encoded_reports:
          changes: "{{ report_data.changes_csv | b64encode }}"
          summary: "{{ report_data.summary_csv | b64encode }}"
          json: "{{ report_data.summary_json | b64encode }}"
      when: repo_check.status == 200

    - name: Upload deployment changes to GitHub
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}/contents/reports/fmc/deployment/{{ report_date }}/deployment_changes_{{ execution_id }}.csv"
        method: PUT
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
          Content-Type: "application/json"
        body_format: json
        body:
          message: "FMC Deployment Changes - {{ execution_id }}"
          content: "{{ encoded_reports.changes }}"
          branch: "{{ github_branch_name }}"
        status_code: [200, 201]
        validate_certs: yes
      register: github_changes_result
      failed_when: false
      when: repo_check.status == 200

    - name: Upload deployment summary to GitHub
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}/contents/reports/fmc/deployment/{{ report_date }}/deployment_summary_{{ execution_id }}.csv"
        method: PUT
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
          Content-Type: "application/json"
        body_format: json
        body:
          message: "FMC Deployment Summary - {{ execution_id }}"
          content: "{{ encoded_reports.summary }}"
          branch: "{{ github_branch_name }}"
        status_code: [200, 201]
        validate_certs: yes
      register: github_summary_result
      failed_when: false
      when: repo_check.status == 200

    - name: Upload JSON details to GitHub
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}/contents/reports/fmc/deployment/{{ report_date }}/deployment_details_{{ execution_id }}.json"
        method: PUT
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
          Content-Type: "application/json"
        body_format: json
        body:
          message: "FMC Deployment Details - {{ execution_id }}"
          content: "{{ encoded_reports.json }}"
          branch: "{{ github_branch_name }}"
        status_code: [200, 201]
        validate_certs: yes
      register: github_json_result
      failed_when: false
      when: repo_check.status == 200

    - name: Verify GitHub uploads
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}/contents/reports/fmc/deployment/{{ report_date }}"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [200, 404]
      register: github_verify
      when: github_changes_result is defined

    - name: Display GitHub upload verification
      ansible.builtin.debug:
        msg: 
          - "GitHub Upload Status:"
          - "Files uploaded: {{ github_verify.json | json_query('[].name') | default([]) }}"
          - "Upload path: reports/fmc/deployment/{{ report_date }}/"
      when: github_verify is defined and github_verify.status == 200

    - name: Set GitHub upload status
      ansible.builtin.set_fact:
        github_uploaded: "{{ (github_changes_result.status | default(0) in [200, 201]) and (github_summary_result.status | default(0) in [200, 201]) }}"