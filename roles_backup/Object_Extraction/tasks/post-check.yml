---
- name: Display extraction summary
  ansible.builtin.debug:
    msg:
      - "========================================="
      - "EXTRACTION SUMMARY"
      - "========================================="
      - "Execution ID: {{ execution_id }}"
      - "Status: COMPLETED"
      - "Total Objects Extracted: {{ total_objects | default(0) }}"
      - "  - Network Objects:  {{ network_objects_count | default(0) }}"
      - "  - Network Groups:   {{ network_groups_count  | default(0) }}"
      - "  - Service Objects:  {{ port_objects_count    | default(0) }}"
      - "  - Service Groups:   {{ port_groups_count     | default(0) }}"
      - "  - URL Objects:      {{ url_objects_count     | default(0) }}"
      - "  - URL Groups:       {{ url_groups_count      | default(0) }}"
      - "  - Geolocation Obj.: {{ geo_objects_count     | default(0) }}"
      - "Files Generated:"
      - "  - JSON: /tmp/objects_{{ execution_id }}.json"
      - "  - CSV:  /tmp/objects_{{ execution_id }}.csv"
      - "  - Report: /tmp/object_report_{{ execution_id }}.txt"
      - "========================================="

- name: Verify files were created
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - "/tmp/objects_{{ execution_id }}.json"
    - "/tmp/objects_{{ execution_id }}.csv"
  delegate_to: localhost
  register: file_checks

- name: Report file generation status
  ansible.builtin.debug:
    msg: "File {{ item.item }} - {{ 'Created successfully' if item.stat.exists else 'Failed to create' }}"
  loop: "{{ file_checks.results }}"

# Email Section
- name: Send email report via Gmail
  when:
    - send_to_email | default('no') | lower == 'yes'
    - email_address is defined and email_address | length > 0
    - smtp_username is defined
    - smtp_password is defined
  delegate_to: localhost
  ansible.builtin.mail:
    host: "smtp.gmail.com"
    port: 587
    username: "{{ smtp_username }}"
    password: "{{ smtp_password }}"
    from: "{{ smtp_username }}"
    to: "{{ email_address }}"
    subject: "FMC Object Extraction Report - {{ execution_id }}"
    body: |
      FMC Object/Object-Group Extraction Report
      ==========================================
      
      SUMMARY
      -------
      - Host: {{ ansible_host }}
      - Execution Time: {{ report_date }} at {{ report_time }}
      - Total Objects Extracted: {{ total_objects | default(0) }}
        * Network Objects: {{ network_objects_count | default(0) }}
        * Network Groups: {{ network_groups_count | default(0) }}
        * Port Objects: {{ port_objects_count | default(0) }}
        * URL Objects: {{ url_objects_count | default(0) }}
      
      Please find the detailed reports attached.
      
      ---
      Generated by Ansible Automation Platform
      Report ID: {{ execution_id }}
    attach:
      - "/tmp/object_report_{{ execution_id }}.txt"
      - "/tmp/objects_{{ execution_id }}.csv"
      - "/tmp/objects_{{ execution_id }}.json"
    secure: "starttls"
    charset: "utf-8"
  register: email_result
  failed_when: false

# GitHub Upload Section
- name: Upload to GitHub
  when:
    - store_to_repo | default('no') | lower == 'yes'
    - github_repo_owner is defined
    - github_repo_name is defined
    - github_token is defined
  block:
    - name: Check GitHub repository
      delegate_to: localhost
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}"
        method: GET
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: [200, 404]
        validate_certs: yes
      register: repo_check
      failed_when: false

    - name: Set GitHub branch
      ansible.builtin.set_fact:
        github_branch_name: "{{ repo_check.json.default_branch | default('main') }}"
      when: repo_check.status == 200

    - name: Read report files for GitHub
      delegate_to: localhost
      ansible.builtin.slurp:
        src: "{{ item }}"
      loop:
        - "/tmp/object_report_{{ execution_id }}.txt"
        - "/tmp/objects_{{ execution_id }}.csv"
        - "/tmp/objects_{{ execution_id }}.json"
      register: file_contents
      when: repo_check.status == 200

    - name: Upload files to GitHub
      delegate_to: localhost
      ansible.builtin.uri:
        url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}/contents/{{ github_repo_path }}/{{ report_date }}/{{ item.item | basename }}"
        method: PUT
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
          Content-Type: "application/json"
        body_format: json
        body:
          message: "Object Extraction Report - {{ execution_id }}"
          content: "{{ item.content }}"
          branch: "{{ github_branch_name }}"
        status_code: [200, 201]
        validate_certs: yes
      loop: "{{ file_contents.results }}"
      register: github_upload_results
      failed_when: false
      when: 
        - repo_check.status == 200
        - file_contents is defined

    - name: Report GitHub upload status
      ansible.builtin.debug:
        msg: "GitHub upload {{ 'successful' if item.status in [200, 201] else 'failed' }} for {{ item.item.item | basename }}"
      loop: "{{ github_upload_results.results }}"
      when: github_upload_results.results is defined

# Final Summary
- name: Display delivery summary
  ansible.builtin.debug:
    msg:
      - "========================================="
      - "REPORT DELIVERY STATUS"
      - "========================================="
      - "Email: {{ 'Sent to ' + email_address if (email_result is defined and not email_result.failed) else 'Not sent' }}"
      - "GitHub: {{ 'Uploaded successfully' if (github_upload_results is defined and github_upload_results.results | selectattr('status', 'in', [200, 201]) | list | length > 0) else 'Not uploaded' }}"
      - "========================================="