---
- name: Post-check verification for static routes
  block:
    - name: Build network prefix for verification
      ansible.builtin.set_fact:
        network_to_verify: "{{ route_network | default('') }}"
      when: operation_type | default('single') == 'single'

    - name: Display configuration summary
      ansible.builtin.debug:
        msg:
          - "========================================="
          - "STATIC ROUTE CONFIGURATION SUMMARY"
          - "========================================="
          - "Execution ID: {{ execution_id }}"
          - "Status: {{ execution_status | upper }}"
          - "Device: {{ cluster_name }}"
          - "Action: {{ route_action | upper }}"
          - "Network: {{ route_network | default('N/A') }}"
          - "Gateway: {{ route_gateway | default('N/A') }}"
          - "Interface: {{ interface_name | default('N/A') }}"
          - "Metric: {{ route_metric | default('N/A') }}"
          - "Routes Modified: {{ routes_modified | length }}"
          - "Deployment: {{ 'Pending' if deployment_required else 'Not Required' }}"
          - "========================================="

    - name: Send email notification from post-check
      when:
        - send_email | default('no') | lower == 'yes'
        - email_address is defined and email_address | length > 0
        - smtp_username is defined
        - smtp_password is defined
      delegate_to: localhost
      ansible.builtin.mail:
        host: "smtp.gmail.com"
        port: 587
        username: "{{ smtp_username }}"
        password: "{{ smtp_password }}"
        from: "{{ smtp_username }}"
        to: "{{ email_address }}"
        subject: "FMC Static Route {{ route_action | upper }} - {{ cluster_name }} - {{ execution_id }}"
        body: |
          FMC Static Route Configuration Report
          ======================================
          
          SUMMARY
          -------
          Host: {{ ansible_host }}
          Device: {{ cluster_name }}
          Action: {{ route_action | upper }}
          Execution Time: {{ ansible_date_time.date }} {{ ansible_date_time.time }}
          
          Route Details:
          --------------
          - Network: {{ route_network }}
          - Gateway: {{ route_gateway }}
          - Interface: {{ interface_name }}
          - Metric: {{ route_metric }}
          
          {% if route_action == 'create' and routes_modified | length > 0 %}
          Objects Used/Created:
          ---------------------
          - Network Object: n{{ route_network | replace('/', '_') }}
          - Host Object: h{{ route_gateway }}
          Note: Objects may be newly created or reused if they already existed
          {% elif route_action == 'delete' and deleted_network_obj is defined %}
          Objects in Deleted Route:
          -------------------------
          - Network Object: {{ deleted_network_obj }}
          - Host Object: {{ deleted_host_obj }}
          Note: Objects remain in FMC for future use
          {% endif %}
          
          Routes Modified: {{ routes_modified | length }}
          {% for route in routes_modified %}
          {{ loop.index }}. Action: {{ route.action | upper }}
             Network: {{ route.network }}
             {% if route.gateway is defined %}Gateway: {{ route.gateway }}{% endif %}
          {% endfor %}
          
          {% if routes_modified | length == 0 and route_action == 'delete' %}
          WARNING: No routes were found to delete. Route may not exist.
          {% endif %}
          
          Deployment Status: {{ 'Pending - Manual deployment required' if deployment_required else 'No changes to deploy' }}
          
          ---
          Generated by Ansible Automation Platform
          Report ID: {{ execution_id }}
        secure: "starttls"
        charset: "utf-8"
      register: email_result_postcheck
      failed_when: false
      ignore_errors: true

    # GitHub Upload Section  
    - name: Upload to GitHub Repository
      when:
        - store_to_repo | default('no') | lower == 'yes'
        - github_repo_owner is defined
        - github_repo_name is defined
        - github_token is defined
        - routes_modified | length > 0
      block:
        - name: Wait for report file to exist
          ansible.builtin.wait_for:
            path: "/tmp/fmc_static_route_report_{{ execution_id }}.txt"
            state: present
            timeout: 5
          delegate_to: localhost
          ignore_errors: true
          register: wait_result

        - name: Check GitHub repository
          delegate_to: localhost
          ansible.builtin.uri:
            url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}"
            method: GET
            headers:
              Authorization: "token {{ github_token }}"
              Accept: "application/vnd.github.v3+json"
            status_code: [200, 404]
            validate_certs: yes
          register: repo_check
          failed_when: false
          when: wait_result is succeeded

        - name: Set GitHub branch
          ansible.builtin.set_fact:
            github_branch_name: "{{ repo_check.json.default_branch | default('master') }}"
          when: 
            - repo_check is defined
            - repo_check.status == 200

        - name: Read report file for GitHub
          delegate_to: localhost
          ansible.builtin.slurp:
            src: "/tmp/fmc_static_route_report_{{ execution_id }}.txt"
          register: report_content
          when: 
            - repo_check is defined
            - repo_check.status == 200
          ignore_errors: true

        - name: Create GitHub folder path
          ansible.builtin.set_fact:
            github_upload_path: "reports/fmc/static_routes/{{ ansible_date_time.date }}"
          when: report_content is succeeded

        - name: Upload report to GitHub
          delegate_to: localhost
          ansible.builtin.uri:
            url: "https://api.github.com/repos/{{ github_repo_owner }}/{{ github_repo_name }}/contents/{{ github_upload_path }}/route_report_{{ execution_id }}.txt"
            method: PUT
            headers:
              Authorization: "token {{ github_token }}"
              Accept: "application/vnd.github.v3+json"
              Content-Type: "application/json"
            body_format: json
            body:
              message: "Static Route {{ route_action | upper }} - {{ cluster_name }} - {{ route_network }} - {{ execution_id }}"
              content: "{{ report_content.content }}"
              branch: "{{ github_branch_name }}"
            status_code: [200, 201]
            validate_certs: yes
          register: github_upload_result
          failed_when: false
          when: 
            - report_content is defined
            - report_content is succeeded

        - name: Report GitHub upload status
          ansible.builtin.debug:
            msg: "GitHub upload {{ 'successful' if (github_upload_result is defined and github_upload_result.status in [200, 201]) else 'failed' }}"
          when: github_upload_result is defined

    # Final Delivery Summary
    - name: Display delivery summary
      ansible.builtin.debug:
        msg:
          - "========================================="
          - "REPORT DELIVERY STATUS"
          - "========================================="
          - "Email: {{ 'Sent successfully' if (email_result is defined or email_result_postcheck is defined) else 'Not sent' }}"
          - "GitHub: {{ 'Uploaded to ' + github_repo_owner + '/' + github_repo_name if (github_upload_result is defined and github_upload_result.status in [200, 201]) else 'Not uploaded' }}"
          - "Local Report: /tmp/fmc_static_route_report_{{ execution_id }}.txt"
          - "========================================="
  rescue:
    - name: Post-check failed
      ansible.builtin.debug:
        msg: "Post-check verification failed: {{ ansible_failed_result.msg | default('Unknown error') }}"